{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Lamdba stack to schedule wraith auto scaling groups.\n",
    "Parameters": {
        "S3BucketID": {
            "Description": "Reports S3 Bucket ID",
            "Type": "String"
        },
        "TempS3bucket": {
         "Type": "String",
         "Description": "Temp S3 Bucket name , used to get the wraith config files"
        }
    },
    "Resources": {
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                           "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "S3Access",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "autoscaling:*"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:${AWS::Partition}:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "LogsAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*Helper*"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Lambda function to copy the config from the temp s3 bucket to the perminent bucket\n",
                "Code": {
                      "ZipFile": {
                          "Fn::Join": [
                              "",
                              [
                                  "import boto3\n",
                                  "import json\n",
                                  "s3 = boto3.resource('s3')\n",
                                  "def lambda_handler (event, context):\n",
                                  " bucket = s3.Bucket('",{ "Ref" : "TempS3bucket" }, "')\n",
                                  " dest_bucket=s3.Bucket('",{ "Ref" : "S3BucketID" }, "')\n",
                                  " print(bucket)\n",
                                  " print(dest_bucket)\n",
                                  "for obj in bucket.objects.filter(Prefix='Input/daily/acctno_pin_xref/ABC_ACCTNO_PIN_XREF',Delimiter='/'):\n",
                                  "  dest_key=obj.key\n",
                                  "  print(dest_key)\n",
                                  "  s3.Object(dest_bucket.name, dest_key).copy_from(CopySource= {'Bucket': obj.bucket_name, 'Key': obj.key})\n", 
                                  "print('Wraith Lamdba S3 Copy Completed!')\n",
                                  "return 'Wraith Lamdba S3 Copy Completed!'\n"
                              ]
                          ]
                      }
                },
                "Handler": "index.lambda_handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::Sub": "${LambdaExecutionRole.Arn}"
                },
                "Runtime": "python3.6"
            }
        },
        "InvokeLambda" : {
            "Type": "Custom::InvokeLambda",
            "Version" : "1.0",
            "Properties" : {
                "ServiceToken": {
                    "Fn::GetAtt": ["LambdaFunction","Arn"]
                }
            }
        }
    }
}
