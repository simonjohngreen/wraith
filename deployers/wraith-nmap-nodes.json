{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploys wraith nmap nodes for port scanning, each node gets its own public ip to allow the attack to be distributed",
    "Parameters": {
        "AvailabilityZone1": {
            "Description": "AWS Availability Zone For the nodes",
            "Type": "String",
            "Default": "eu-west-3a"
        },
        "WraithNodeInstanceType": {
            "Description": "wraith node Instance Type",
            "Type": "String",
            "Default": "m5.large"
        },
        "KeyName": {
            "Description": "SSH Key Name",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "WraithKey"
        },
        "SiteName": {
            "Description": "Site Name",
            "Type": "String",
            "Default": "wraith-nmap"
        },
        "idVPC": {
            "Description": "Existing VPCid where the nodes will sit",
            "Type": "String"
        },
        "idPublicSubnet1": {
            "Description": "Existing Public Subnet 1 id",
            "Type": "String"
        },
        "NMAPVersion": {
            "Description": "NMAP version to install, default is 1.18.9",
            "Type": "String",
            "Default": "7.91-1"
        },
        "EmailServerURL": {
            "Description": "smtp url for your email account",
            "Type": "String"
        },
        "EmailUsername": {
            "Description": "smtp email account user name",
            "Type": "String"
        },
        "EmailPassword": {
            "Description": "smtp email account user name",
            "Type": "String"
        },
        "EmailFromAddress": {
            "Description": "Email address to mark the emails as sent from, for icloud and gmail its the same as EmailUsername, for AWS SES this will need to be validated",
            "Type": "String"
        },
        "EmailToAddress": {
            "Description": "Email address to send the reports to",
            "Type": "String"
        },
        "NumberOfNodes": {
            "Description": "Number of instances to deploy in the auto scaling group",
            "Type": "String",
            "Default": "2"
         },
        "DebugLogs": {
            "Description": "if true we will enable SYS_DEBUG log level",
            "Type": "String",
            "Default": "false"
        },
        "ExternaldnsEnabled": {
            "Description": "true if you want to deploy external DNS into AWS with a test app",
            "Type": "String",
            "Default": "true"
        },
        "ExternaldnsCreateZone": {
            "Description": "true if you want the stack to create the zone",
            "Type": "String",
            "Default": "false"
        },
        "ExternaldnsDomainFilter": {
            "Description": "domain for the external dns to monitor",
            "Type": "String",
            "Default": "nmap.wraith.com"
        },
        "S3BucketID": {
            "Description": "Reports S3 Bucket ID",
            "Type": "String"
        },
        "tempS3bucketURL": {
         "Type": "String",
         "Description": "Temp S3 Bucket used to store the cloudformation yamls"
        },
        "TempS3bucket": {
         "Type": "String",
         "Description": "Temp S3 Bucket name , used to get the wraith config files"
        }
    },
    "Mappings": {
        "AWSRegionArch2AMI": {
            "ca-central-1": { "UBUNTU18XHVM": "ami-0dc24446d93e1b2f3" },
            "ap-southeast-1": { "UBUNTU18XHVM": "ami-07c4661e10b404bbb" },
            "ap-southeast-2": { "UBUNTU18XHVM": "ami-0ff0fa9d409d5181c" },
            "eu-west-1": { "UBUNTU18XHVM": "ami-0f52887e1cb557b55" },
            "eu-west-2": { "UBUNTU18XHVM": "ami-0820357ff5cf2333d" },
            "eu-west-3": { "UBUNTU18XHVM": "ami-04d53e1b6d843f8fa" },
            "eu-central-1": { "UBUNTU18XHVM": "ami-0494594c0ab2e6df4" },
            "cn-north-1": { "UBUNTU18XHVM": "ami-05248307900d52e3a" },
            "cn-northwest-1": { "UBUNTU18XHVM": "ami-075c9f159ee0bdc1c" },
            "us-east-1": { "UBUNTU18XHVM": "ami-0b893eef6e21b60a1" },
            "us-east-2": { "UBUNTU18XHVM": "ami-0ebc84cad4ab1c308" },
            "us-west-1": { "UBUNTU18XHVM": "ami-00da7d550c0cbaa7b" },
            "us-west-2": { "UBUNTU18XHVM": "ami-0f004f40550f73050" },
            "ap-northeast-1": { "UBUNTU18XHVM": "ami-071c64dd45080ce0b" },
            "eu-north-1": { "UBUNTU18XHVM": "ami-01cc5333d19d509d3" },
            "eu-south-1": { "UBUNTU18XHVM": "ami-0958f3c538b50dfba" },
            "ap-south-1": { "UBUNTU18XHVM": "ami-02def66f5c32f4f2b" },
            "ap-northeast-2": { "UBUNTU18XHVM": "ami-005ede73f888b317f" },
            "ap-northeast-3": { "UBUNTU18XHVM": "ami-0d371383d68608b49" },
            "af-south-1": { "UBUNTU18XHVM": "ami-07ab6ee42fc89ba35" },
            "me-south-1": { "UBUNTU18XHVM": "ami-04b3755011880400f" },
            "sa-east-1": { "UBUNTU18XHVM": "ami-004c8f619d7ca0f36" }
        }
    },
    "Conditions": {
        "HasExternaldnsCreateZone": { "Fn::Equals": [{ "Ref": "ExternaldnsCreateZone" }, "true"] }
    },
    "Resources": {
        "WraithNMAPLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": 5,
                "LogGroupName" : "wraith-nmap"
            }
        },
        "SecurityGroupWraith": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": { "Ref": "idVPC" },
                "GroupDescription": "Security group for Wraith NMAP Instances",
                "GroupName": { "Fn::Join": [".", ["Wraith_NMAP_SG1", { "Ref": "SiteName" }, { "Ref": "AvailabilityZone1" }]] },
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "0.0.0.0/0",
                        "Description": "allow all outbound traffic"
		            },
                    {
                        "IpProtocol": "-1",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIpv6": "::/0", 
                        "Description": "allow all IPV6 outbound traffic"
		            }
		        ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join" : [ ".", [ "Wraith_NMAP_Security_Group", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] }
                    }
                ]
            }
        },
        "SGIngressSecurityGroupWraith": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "SecurityGroupWraith"
                },
                "IpProtocol": "-1",
                "FromPort": "-1",
                "ToPort": "-1",
                "SourceSecurityGroupId": {
                    "Ref": "SecurityGroupWraith"
                },
                "Description": "loopback rule"
            }
        },
        "wraithNmapNodeLaunchConfig" : {
           "Type" : "AWS::AutoScaling::LaunchConfiguration",
           "Properties" : {
              "ImageId": {
                 "Fn::FindInMap" : ["AWSRegionArch2AMI", {"Ref" : "AWS::Region"}, "UBUNTU18XHVM"]
              },
              "SecurityGroups" : [ { "Ref" : "myEC2SecurityGroup" }, "myExistingEC2SecurityGroup" ],
              "AssociatePublicIpAddress" : true,
              "InstanceType": {
                 "Ref": "WraithNodeInstanceType"
              },
              "BlockDeviceMappings": [
                 {
                      "DeviceName": "/dev/sda1",
                      "Ebs": {
                      "VolumeSize": "30"
                      }
                 }
              ],
              "KeyName": {
                 "Ref": "KeyName"
              },
              "IamInstanceProfile": { "Ref": "wraithInstanceProfile" },
              "SecurityGroups"        : [ { "Ref" : "SecurityGroupWraith" } ],
              "LaunchConfigurationName" : "wraithNmapNodeLaunchConfig",
              "UserData": {
                 "Fn::Base64": {
                   "Fn::Join": [
                       "",
                       [ 
                         "#!/bin/bash -x\n",
                         "exec > /tmp/node-install.log 2>&1\n",
                               "#################\n",
                               "#install Wraith NMAP node\n",
                               "#################\n",
                               "swapoff -a\n",
                               "cd /root\n",
                               "apt-get update\n",
                               "apt-get remove -y --purge unattended-upgrades\n",
                               "apt-get -y install nmap jq fop\n",
                               "apt install -y python-pip\n",
                               "curl https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o /tmp/awscli-bundle.zip\n",
                               "unzip /tmp/awscli-bundle.zip -d /tmp\n",
                               "sudo /tmp/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws\n",
                               "curl -o /root/amazon-cloudwatch-agent.deb https://s3.amazonaws.com/amazoncloudwatch-agent/debian/amd64/latest/amazon-cloudwatch-agent.deb\n",
                               "dpkg -i -E /root/amazon-cloudwatch-agent.deb\n",
                               "cat > /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json <<EOF\n",
                               "{\n",
                               "     \"agent\": {\n",
                               "         \"metrics_collection_interval\": 60\n",
                               "     },\n",
                               "     \"logs\": {\n",
                               "         \"logs_collected\": {\n",
                               "             \"files\": {\n",
                               "                 \"collect_list\": [\n",
                               "                     {\n",
                               "                         \"file_path\": \"/var/log/wraith.log\",\n",
                               "                         \"log_group_name\": \"wraith-nmap\",\n",
                               "                         \"log_stream_name\": \"{hostname}/syslog\",\n",
                               "                         \"timestamp_format\" :\"%b %d %H:%M:%S\"\n",
                               "                     }\n",
                               "                 ]\n",
                               "             }\n",
                               "         }\n",
                               "     }\n",
                               "}\n",
                               "EOF\n", 
                               "systemctl enable amazon-cloudwatch-agent.service\n",
                               "service amazon-cloudwatch-agent start\n",
                               "aws s3 cp s3://",{ "Ref" : "S3BucketID" }, "/config/wraith-config.xml /root\n", 
                               "aws s3 cp s3://",{ "Ref" : "S3BucketID" }, "/config/wraith-config.json /root\n",
                               "aws s3 cp s3://",{ "Ref" : "S3BucketID" }, "/config/wraith-endpoints-ipv4 /root\n",
                               "aws s3 cp s3://",{ "Ref" : "S3BucketID" }, "/config/wraith-endpoints-ipv6 /root\n",
                               "aws s3 cp s3://",{ "Ref" : "S3BucketID" }, "/config/nmap-fo.xsl /root\n",
                               "aws s3 cp s3://",{ "Ref" : "S3BucketID" }, "/config/nmap-runner.sh /root\n",
                               "####### msmtp setup for emailing reports################\n",
                               "sudo apt-get -y install msmtp msmtp-mta ca-certificates\n",
                               "sudo mkdir -p /etc/msmtp\n",
                               "sudo mkdir -p /var/log/msmtp\n",
                               "cat > /etc/msmtp/wraith0 <<EOF\n",
                               "# Define here some settings that can be useful for every account\n",
                               "defaults\n",
                               "        logfile /var/log/msmtp/general.log\n",
                               "# Settings for wraith0 account\n",
                               "account wraith0\n",
                               "        protocol smtp\n",
                               "        host ",{ "Ref" : "EmailServerURL" }, "\n",
                               "        tls on\n",
                               "        tls_trust_file /etc/ssl/certs/ca-certificates.crt\n",
                               "        port 587\n",
                               "        auth login\n",
                               "        user ",{ "Ref" : "EmailUsername" }, "\n",
                               "        password ",{ "Ref" : "EmailPassword" }, "\n",
                               "        from ",{ "Ref" : "EmailFromAddress" }, "\n",
                               "        logfile /var/log/msmtp/wraith0.log\n",
                               "# If you don't use the -a parameter in your command line,\n",
                               "# the default account wraith0 will be used.\n",
                               "account default: wraith0\n",
                               "EOF\n",
                               "sudo DEBIAN_FRONTEND=noninteractive apt-get -y install mutt\n",
                               "cat > /root/muttrc <<EOF\n",
                               "set sendmail=\"/usr/bin/msmtp --file=/etc/msmtp/wraith0\"\n",
                               "set use_from=yes\n",
                               "set realname=\"",{ "Ref" : "EmailFromAddress" }, "\"\n",
                               "set from=\"",{ "Ref" : "EmailFromAddress" }, "\"\n",
                               "set envelope_from=yes\n",
                               "EOF\n",
                               "cat > /root/emailmessage.txt <<EOF\n",
                               "From:  \"",{ "Ref" : "EmailFromAddress" }, "\"\n",
                               "Subject: icloud attachment Test\n",
                               "This message was sent using icloud\n",
                               "EOF\n",
                               "sed -i -e \"s/\\[EmailToAddress\\]/", { "Ref": "EmailToAddress" }, "/g\" /root/nmap-runner.sh \n",
                               "sed -i -e \"s/\\[S3BucketID\\]/", { "Ref": "S3BucketID" }, "/g\" /root/nmap-runner.sh \n",
                               "touch /var/log/wraith.log\n",
                               "cat > /etc/logrotate.d/wraith <<EOF\n",
                               "/var/log/wraith.log {\n",
                               "  rotate 5 \n",
                               "  weekly \n",
                               "  compress\n",
                               "  missingok\n",
                               "  notifempty\n",
                               "}\n",
                               "EOF\n",
                               "cat > /etc/systemd/system/wraith.service <<EOF\n",
                               "[Unit]\n",
                               "After=network.service\n",
                               "\n",
                               "[Service]\n",
                               "ExecStart=/root/nmap-runner.sh\n",
                               "\n",
                               "[Install]\n",
                               "WantedBy=default.target\n",
                               "EOF\n",
                               "chmod u+x /root/nmap-runner.sh\n",
                               "chmod 664 /etc/systemd/system/wraith.service\n",
                               "systemctl daemon-reload\n",
                               "systemctl enable wraith.service\n",
                               "systemctl start wraith.service\n",
                               "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                               "/usr/local/bin/cfn-signal -e $? ",
                                   "  --stack ", { "Ref": "AWS::StackName" },
                                   "  --resource wraithNmapNodeAutoScalingGroup " ,
                                   "  --region ", { "Ref" : "AWS::Region" }, "\n"
                       ]
                    ]
                 }
             }
           }
        },
        "wraithNmapNodeAutoScalingGroup" : {
           "Type" : "AWS::AutoScaling::AutoScalingGroup",
           "Properties" : {
              "VPCZoneIdentifier" : [ { "Ref": "idPublicSubnet1" } ],
              "LaunchConfigurationName" : { "Ref" : "wraithNmapNodeLaunchConfig" },
              "MinSize" : { "Ref": "NumberOfNodes" },
              "MaxSize" : { "Ref": "NumberOfNodes" },
              "Tags": [
                   {
                       "Key": "Name",
                       "Value": { "Fn::Join" : [ ".", [ "Wraith_nmap_autoscaling_group", { "Ref" : "SiteName" }, { "Ref" : "AvailabilityZone1" } ] ] },
                       "PropagateAtLaunch": "true"
                   }
               ]
           },
           "CreationPolicy": {
              "ResourceSignal": {
                "Count": {"Ref": "NumberOfNodes"},
                "Timeout": "PT30M"
              }
           }
        },
        "wraithRole": {
           "Type": "AWS::IAM::Role",
           "Properties": {
              "AssumeRolePolicyDocument": {
                 "Statement": [{
                    "Effect": "Allow",
                    "Principal": {
                       "Service": ["ec2.amazonaws.com"]
                    },
                    "Action": ["sts:AssumeRole"]
                 }]
              },
              "Path": "/"
           }
        },
        "wraithInstanceProfile": {
           "Type": "AWS::IAM::InstanceProfile",
           "Properties": {
              "Path": "/",
              "Roles": [{ "Ref": "wraithRole" }]
           }
        },
        "wraithRolePolicies":{
            "Type":"AWS::IAM::Policy",
            "Properties":{
               "PolicyName":"wraithIAMPolicy",
               "PolicyDocument":{
                  "Statement":[
                     {
                        "Effect":"Allow",
                        "Action":[
                           "ec2:DescribeInstances",
                           "autoscaling:DescribeAutoScalingInstances"
                        ],
                        "Resource":"*"
                     },
                     {
                        "Effect":"Allow",
                        "Action":[
                           "route53:ChangeResourceRecordSets"
                        ],
                        "Resource":"arn:aws:route53:::hostedzone/*"
                     },
                     {
                        "Effect":"Allow",
                        "Action":[
                           "route53:ListHostedZones",
                           "route53:ListResourceRecordSets"
                        ],
                        "Resource":"*"
                     },
                     {
                        "Effect":"Allow",
                        "Action":[
                           "s3:*"
                        ],
                        "Resource":"*"
                     },
                     {
                        "Effect":"Allow",
                        "Action":[
                           "logs:CreateLogStream",
                           "logs:DescribeLogStreams",
                           "logs:PutLogEvents",
                           "cloudwatch:PutMetricData"
                        ],
                        "Resource":"*"
                     }
                  ]
               },
               "Roles":[
                  {
                     "Ref":"wraithRole"
                  }
               ]
            }
        }
    },
    "Outputs": {
        "Note1": {
            "Description": "NA",
            "Value": "All done, Go Destroy (but don't forget to tell AWS)" 
        },
        "AutoScalingID": {
            "Description": "Autoscaling Group ID for the Lamda scaler",
            "Value": {"Ref": "wraithNmapNodeAutoScalingGroup"}
        }
    }
}
