{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Root Stack for wraith, using wraithD wraith2 embedded containerd this stack calls all other stacks and outputs how to connect when complete",
    "Parameters": {
        "AvailabilityZone1": {
            "Description": "AWS Availability Zone One",
            "Type": "String",
            "Default": "eu-west-3a"
        },
        "AvailabilityZone2": {
            "Description": "AWS Availability Zone Two",
            "Type": "String",
            "Default": "eu-west-3b"
        },
        "AvailabilityZone3": {
            "Description": "AWS Availability Zone Three",
            "Type": "String",
            "Default": "eu-west-3c"
        },
        "VPCCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for entire management control VPC.",
            "Default": "100.72.100.0/22",
            "Type": "String"
        },
        "PublicSubnetCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "CIDR block for the NAT GW parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for the public subnet",
            "Default": "100.72.103.0/24",
            "Type": "String"
        },
        "SiteName": {
            "Description": "Site Name",
            "Type": "String",
            "Default": "wraith"
        },
        "VPCDOMAIN": {
            "Description": "VCP domain type",
            "Type": "String",
            "Default": "default"
        },
        "WraithNodeInstanceType": {
            "Description": "wraith node Instance Type",
            "Type": "String",
            "Default": "m5.large"
        },
        "KeyName": {
            "Description": "SSH Key Name",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "wraithkey"
        },
        "SiteName": {
            "Description": "Site Name",
            "Type": "String",
            "Default": "wraith"
        },
        "NMAPVersion": {
            "Description": "NMAP version to install, default is 1.18.9",
            "Type": "String",
            "Default": "1.18.9"
        },
        "NumberOfNodes": {
            "Description": "Number of Contrail+microK8s clusters to deploy in the auto scaling group",
            "Type": "String",
            "Default": "1"
         },
        "EmailServerURL": {
            "Description": "smtp url for your email account",
            "Type": "String"
        },
        "EmailUsername": {
            "Description": "smtp email account user name",
            "Type": "String"
        },
        "EmailPassword": {
            "Description": "smtp email account user name",
            "Type": "String"
        },
        "EmailFromAddress": {
            "Description": "Email address to mark the emails as sent from, for icloud and gmail its the same as EmailUsername, for AWS SES this will need to be validated",
            "Type": "String"
        },
        "EmailToAddress": {
            "Description": "Email address to send the reports to",
            "Type": "String"
        },
        "DebugLogs": {
            "Description": "if true we will enable SYS_DEBUG in the contrail cni",
            "Type": "String",
            "Default": "false"
        },
        "ExternaldnsEnabled": {
            "Description": "true if you want to deploy external DNS into AWS with a test app",
            "Type": "String",
            "Default": "true"
        },
        "ExternaldnsCreateZone": {
            "Description": "true if you want the stack to create the zone",
            "Type": "String",
            "Default": "true"
        },
        "ExternaldnsDomainFilter": {
            "Description": "domain for the external dns to monitor",
            "Type": "String",
            "Default": "incubator.dev.int.foobarservices.com"
        },
        "ExternaldnsZoneID": {
            "Description": "if using an existing domain enter the hosted zone ID here",
            "Type": "String",
            "Default": "Z09733143J0NHZEXWD6B"
        }
    },
    "Resources": {
        "InfraStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                 "TemplateURL" : "https://wraithdeployer.s3-eu-west-3.amazonaws.com/wraith-infra.json",
                 "Parameters": {
                    "AvailabilityZone1": {
                        "Ref": "AvailabilityZone1"
                    },
                    "AvailabilityZone2": {
                        "Ref": "AvailabilityZone2"
                    },
                    "AvailabilityZone3": {
                        "Ref": "AvailabilityZone3"
                    },
                    "VPCCIDR1": {
                        "Ref": "VPCCIDR1"
                    },
                    "PublicSubnetCIDR1": {
                        "Ref": "PublicSubnetCIDR1"
                    },
                    "SiteName": {
                        "Ref": "SiteName"
                    },
                    "VPCDOMAIN": {
                        "Ref": "VPCDOMAIN"
                    }
                }
            }
        },
        "NMAPNodesStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                 "TemplateURL" : "https://wraithdeployer.s3-eu-west-3.amazonaws.com/wraith-nmap-nodes.json",
                 "Parameters": {
                    "AvailabilityZone1": {
                        "Ref": "AvailabilityZone1"
                    },
                    "WraithNodeInstanceType": {
                        "Ref": "WraithNodeInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "SiteName": {
                        "Ref": "SiteName"
                    },
                    "idVPC": {
                        "Fn::GetAtt": [ "InfraStack", "Outputs.idVPC" ]
                    },
                    "idPublicSubnet1": {
                        "Fn::GetAtt": [ "InfraStack", "Outputs.idPublicSubnet1" ]
                    },
                    "NMAPVersion": {
                        "Ref": "NMAPVersion"
                    },
                    "NumberOfNodes": {
                        "Ref": "NumberOfNodes"
                    },
                    "EmailServerURL": {
                        "Ref": "EmailServerURL"
                    },
                    "EmailUsername": {
                        "Ref": "EmailUsername"
                    },
                    "EmailPassword": {
                        "Ref": "EmailPassword"
                    },
                    "EmailFromAddress": {
                        "Ref": "EmailFromAddress"
                    },
                    "EmailToAddress": {
                        "Ref": "EmailFromAddress"
                    },
                    "DebugLogs": {
                        "Ref": "DebugLogs"
                    },
                    "ExternaldnsEnabled": {
                        "Ref": "ExternaldnsEnabled"
                    },
                    "ExternaldnsCreateZone": {
                        "Ref": "ExternaldnsCreateZone"
                    },
                    "ExternaldnsDomainFilter": {
                        "Ref": "ExternaldnsDomainFilter"
                    },
                    "ExternaldnsZoneID": {
                        "Ref": "ExternaldnsZoneID"
                    }
                }
            }
        }
    },
    "Outputs": {
        "Note1": {
            "Description": "NA",
            "Value": "All Done Go Destroy (don't forget to tell AWS)" 
        }
    }
}
